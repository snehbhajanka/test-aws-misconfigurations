AWSTemplateFormatVersion: "2010-09-09"
Description: "EC2 Instance with Security Configurations - FOR SECURITY TESTING ONLY"

Parameters:
  InstanceType:
    Type: String
    Default: "t2.micro"
    Description: "EC2 instance type"
    
  KeyPairName:
    Type: String
    Default: ""
    Description: "Optional EC2 Key Pair name for SSH access"

Resources:
  # Security Group with restricted access
  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Security group for testing - restricted access"
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 22
          ToPort: 22
          CidrIp: "10.0.0.0/16"
          Description: "SSH access from private networks only"
        - IpProtocol: "tcp"
          FromPort: 80
          ToPort: 80
          CidrIp: "0.0.0.0/0"
          Description: "HTTP access from anywhere"
        - IpProtocol: "tcp"
          FromPort: 443
          ToPort: 443
          CidrIp: "0.0.0.0/0"
          Description: "HTTPS access from anywhere"
      Tags:
        - Key: "Name"
          Value: "RestrictedSecurityGroup"
        - Key: "Environment"
          Value: "SecurityTesting"

  # IAM Role with limited permissions
  EC2Role:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "EC2TestRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "ec2.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy"
      Tags:
        - Key: "Name"
          Value: "EC2TestRole"
        - Key: "Environment"
          Value: "SecurityTesting"

  # Instance Profile
  EC2InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      InstanceProfileName: "EC2TestInstanceProfile"
      Roles:
        - !Ref EC2Role

  # EC2 Instance with security configurations
  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: "ami-0c02fb55956c7d316"  # Amazon Linux 2 AMI (update as needed)
      InstanceType: !Ref InstanceType
      SecurityGroupIds:
        - !Ref SecurityGroup
      IamInstanceProfile: !Ref EC2InstanceProfile
      KeyName: !If [HasKeyPair, !Ref KeyPairName, !Ref "AWS::NoValue"]
      BlockDeviceMappings:
        - DeviceName: "/dev/xvda"
          Ebs:
            VolumeType: "gp3"
            VolumeSize: 8
            Encrypted: true
            DeleteOnTermination: true
      MetadataOptions:
        HttpTokens: "required"  # IMDSv2 only
        HttpEndpoint: "enabled"
        HttpPutResponseHopLimit: 1
      Monitoring: true
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y amazon-cloudwatch-agent
          echo "Instance configured securely" > /tmp/setup.log
      Tags:
        - Key: "Name"
          Value: "SecureEC2Instance"
        - Key: "Environment"
          Value: "SecurityTesting"
        - Key: "Purpose"
          Value: "Security testing with proper configurations"

Conditions:
  HasKeyPair: !Not [!Equals [!Ref KeyPairName, ""]]

Outputs:
  InstanceId:
    Description: "Instance ID of the EC2 instance"
    Value: !Ref EC2Instance
    Export:
      Name: !Sub "${AWS::StackName}-InstanceId"

  InstancePublicIp:
    Description: "Public IP of the EC2 instance"
    Value: !GetAtt EC2Instance.PublicIp
    Export:
      Name: !Sub "${AWS::StackName}-PublicIp"

  SecurityGroupId:
    Description: "ID of the security group"
    Value: !Ref SecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-SecurityGroupId"

  SecurityStatus:
    Description: "Security configuration status"
    Value: "CONFIGURED: Instance has encrypted storage, IMDSv2, monitoring, and restricted security group"
    Export:
      Name: !Sub "${AWS::StackName}-SecurityStatus"