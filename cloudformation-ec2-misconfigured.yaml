---
AWSTemplateFormatVersion: "2010-09-09"
Description: "EC2 instance with security configurations - based on existing terraform configuration"

Parameters:
  InstanceType:
    Type: String
    Default: "t2.micro"
    Description: "EC2 instance type"
    AllowedValues:
      - "t2.micro"
      - "t2.small"
      - "t3.micro"
      - "t3.small"

  KeyName:
    Type: String
    Description: "Name of an existing EC2 KeyPair to enable SSH access"
    Default: ""

Resources:
  # Security Group - restricted access
  EC2SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Security group for EC2 instance"
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 22
          ToPort: 22
          CidrIp: "10.0.0.0/8"  # Restricted to private networks only
          Description: "SSH access from private networks only"
        - IpProtocol: "tcp"
          FromPort: 80
          ToPort: 80
          CidrIp: "0.0.0.0/0"
          Description: "HTTP access"
        - IpProtocol: "tcp"
          FromPort: 443
          ToPort: 443
          CidrIp: "0.0.0.0/0"
          Description: "HTTPS access"
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: "0.0.0.0/0"
          Description: "All outbound traffic"
      Tags:
        - Key: "Name"
          Value: "SecureEC2SecurityGroup"
        - Key: "Environment"
          Value: "SecurityTesting"

  # IAM Role with minimal permissions
  EC2Role:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "SecureEC2Role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "ec2.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy"
      Tags:
        - Key: "Name"
          Value: "SecureEC2Role"
        - Key: "Environment"
          Value: "SecurityTesting"

  # Instance Profile
  EC2InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      InstanceProfileName: "SecureEC2InstanceProfile"
      Roles:
        - !Ref EC2Role

  # EC2 Instance with security best practices
  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: "ami-0c02fb55956c7d316"  # Amazon Linux 2 AMI (adjust for region)
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - !Ref EC2SecurityGroup
      IamInstanceProfile: !Ref EC2InstanceProfile
      Monitoring: true  # Enable detailed monitoring
      BlockDeviceMappings:
        - DeviceName: "/dev/xvda"
          Ebs:
            VolumeType: "gp3"
            VolumeSize: 8
            Encrypted: true  # Enable encryption
            DeleteOnTermination: true
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          
          # Security hardening
          echo "Security-hardened web server" > /var/www/html/index.html
          echo "<p>This server follows security best practices.</p>" >> /var/www/html/index.html
          
          # Enable firewall
          systemctl start firewalld
          systemctl enable firewalld
          firewall-cmd --permanent --add-service=http
          firewall-cmd --permanent --add-service=https
          firewall-cmd --reload
      Tags:
        - Key: "Name"
          Value: "SecureEC2Instance"
        - Key: "Environment"
          Value: "SecurityTesting"
        - Key: "Purpose"
          Value: "Security-hardened EC2 instance"

Outputs:
  InstanceId:
    Description: "ID of the EC2 instance"
    Value: !Ref EC2Instance
    Export:
      Name: !Sub "${AWS::StackName}-InstanceId"

  PublicIP:
    Description: "Public IP address of the EC2 instance"
    Value: !GetAtt EC2Instance.PublicIp
    Export:
      Name: !Sub "${AWS::StackName}-PublicIP"

  SecurityStatus:
    Description: "Security status of the instance"
    Value: "SECURE: SSH restricted to private networks, encrypted storage, monitoring enabled"
    Export:
      Name: !Sub "${AWS::StackName}-SecurityStatus"
